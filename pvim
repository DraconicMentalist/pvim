#!/usr/bin/env sh

# Get the path to pvim
export PVIM=$(dirname $(readlink -e -- "$0"))

downloadAppimage() {
  if $appimageNeeded && [ "$imageLoc" == "$PVIM/nvim.appimage" ]; then
    appimageNeeded=false
    echo "Downloading latest Neovim"
    [ -f $PVIM/nvim.appimage ] && rm $PVIM/nvim.appimage
    curl -Lo $PVIM/nvim.appimage https://github.com/neovim/neovim/releases/latest/download/nvim.appimage && chmod u+x $PVIM/nvim.appimage
  fi
}

updatepvim() {
  echo "Updating pvim"
  git --git-dir=$PVIM/.git --work-tree=$PVIM pull

  echo "Updating the config"
  git --git-dir=$PVIM/config/.git --work-tree=$PVIM/config pull

  if [ "$NV" != "nvim" ]; then
    downloadAppimage
  fi
}

dashU=false
dashF=false
imageLoc="$PVIM/nvim.appimage"
optrem=1
while getopts ':ui:f' opts; do
  case $opts in
    u)
      dashU=true
      ;;
    f)
      dashF=true
      ;;
    i)
      imageLoc="$OPTARG"
      ;;
    --)
      break
      ;;
    *)
      #Don't shift options that are meant for nvim
      optrem=$((optrem+1))
      ;;
  esac
done
shift $((OPTIND-optrem))

# Determine what Neovim to use
if [ -f $imageLoc ]; then
  NV="$imageLoc"
elif command -v nvim > /dev/null && ! $dashF; then
  NV="nvim"
else
  downloadAppimage
  NV="$imageLoc"
fi

if $dashU; then
  updatepvim
fi

#run Neovim with the local files
exec $NV --clean -i "$PVIM/clutter/shada/state" -u "$PVIM/pvim.lua" $@
